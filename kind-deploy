#!/usr/bin/env bash

set -euo pipefail

# source file from the running script dir
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
. "$SCRIPTDIR/kind-common-vars"

if [[ "$#" -gt 0 && "$1" != "--rebuild" ]]; then
		echo "Usage: $0 [--rebuild]"
		echo "If --rebuild is specified, the script will rebuild the cluster."
		exit 1
fi

# Check if kind cluster exists
CLUSTER_FOUND=0
if $(kind get clusters | grep -q "$CLUSTER_NAME"); then
		echo "Kind cluster '$CLUSTER_NAME' already exists."
		CLUSTER_FOUND=1
fi

# Unless --rebuild is specified, this script will not rebuild the cluster.
export KIND_CREATE=true
if [[ "$#" -eq 1 && "$1" == "--rebuild" && $CLUSTER_FOUND -eq 1 ]]; then
		echo "Rebuilding the cluster..."
		rm -rf ~/.kube/config ~/ovn.conf
else
		if [[ $CLUSTER_FOUND -eq 0 ]]; then
				echo "No existing cluster found. Creating a new one."
		else
				echo "Cluster already exists. Skipping creation."
				export KIND_CREATE=false
		fi
fi

# This script deploys a Kind cluster with an IC HA setup.
#
mkdir -p ~/src
cd ~/src

get_repo() {
	echo "git@github.com:$1/ovn-kubernetes"
}

# Clone the repository if it doesn't exist
if [ ! -d "ovn-kubernetes" ]; then
	git clone $(get_repo ovn-kubernetes)
fi

cd ovn-kubernetes

# Add my remote if it doesn't exist
if ! git remote | grep -q fork; then
	git remote add fork -f $(get_repo booxter)
fi

# Buld images
pushd dist/images
make fedora-image
popd

# Create the Kind cluster
pushd contrib
export KUBECONFIG=${HOME}/ovn.conf

./kind.sh

# clean up old images
if [ "$KIND_CREATE" = false ]; then
	$SCRIPTDIR/kind-clean
fi

popd

ln -sf ~/ovn.conf ~/.kube/config
